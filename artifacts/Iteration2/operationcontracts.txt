Contract CO1: findConnections
Operation: findConnections(origin: String, destination: String, minTransfer: int, maxLegs: int): List<List<Connection>>
Cross References: Use Case: Find Train Connections
Preconditions:
-The list of routes (listOfRoutes) has been loaded from the CSV file.
-The user has provided valid input for origin and destination cities.
-minTransfer and maxLegs are valid integers (minTransfer ≥ 0, 1 ≤ maxLegs ≤ 2).

Postconditions:
-Returns a list of possible connection paths (each path is a list of Connection objects) from the origin to the destination, satisfying the minimum transfer time and maximum number of connections.
-If no connections are found, returns an empty list.

Contract CO2: sortConnections
Operation: sortByDuration / sortByFirstClassPrice / sortBySecondClassPrice(connections: List<List<Connection>>): void
Cross References: Use Case: Sort Search Results
Preconditions:
-The list of connections has been generated by findConnections.
-The user has selected a sorting option.
Postconditions:
-The list of connections is sorted in-place according to the selected criterion (total duration, first class price, or second class price).

Contract CO3: bookTrip
Operation: bookTrip(travellers: List<Traveller>, connection: Connection): Trip
Cross References: Use Case: Book a Trip
Preconditions:
- Client has selected a valid connection from search results.
- Traveller information (name, age, id) is provided for each passenger.
- Connection exists in the routes catalog.
Postconditions:
- A Trip is created with a unique alphanumeric ID.
- For each traveller, a Reservation is created with a unique Ticket.
- All travellers are registered in the ClientRepository.
- Trip is persisted to CSV storage.
- Trip object is returned with all reservations.

Contract CO4: viewTrips
Operation: findTripsByTraveller(lastName: String, travellerId: String): List<Trip>
Cross References: Use Case: View Trips
Preconditions:
- Client provides valid lastName and travellerId.
- Trip records exist in CSV storage.
Postconditions:
- Returns a list of all trips where at least one reservation 
  matches the provided lastName and travellerId.
- If no trips are found, returns an empty list.
- Each Trip contains all its reservations with full details 
  (traveller info, connection info, ticket number).